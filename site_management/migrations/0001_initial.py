# Generated by Django 5.2.7 on 2025-10-22 20:28

import django.core.validators
import django.db.models.deletion
import site_management.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(help_text='Domain or IP address of the site', max_length=100, unique=True, verbose_name='Host')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=10, verbose_name='Status')),
                ('support_subdomains', models.BooleanField(default=False, verbose_name='Support Subdomains')),
                ('auto_ssl', models.BooleanField(default=True, help_text='Enable automatic SSL management', verbose_name='Auto SSL')),
                ('protocol', models.CharField(choices=[('http', 'HTTP'), ('https', 'HTTPS')], max_length=10, verbose_name='Protocol')),
                ('ssl_certificate', models.FileField(blank=True, null=True, upload_to=site_management.models.ssl_upload_path, verbose_name='SSL Certificate')),
                ('ssl_key', models.FileField(blank=True, null=True, upload_to=site_management.models.ssl_upload_path, verbose_name='SSL Key')),
                ('ssl_chain', models.FileField(blank=True, null=True, upload_to=site_management.models.ssl_upload_path, verbose_name='SSL Chain')),
                ('action_type', models.CharField(choices=[('block', 'Block'), ('log', 'Log')], default='log', max_length=20, verbose_name='Action Type')),
                ('sensitivity_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10, verbose_name='Sensitivity Level')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('dns_challenge_key', models.CharField(blank=True, help_text='The DNS record name for ACME challenge (e.g., _acme-challenge.example.com)', max_length=255, null=True, verbose_name='DNS Challenge Key')),
                ('dns_challenge_value', models.CharField(blank=True, help_text='The TXT record value for ACME challenge', max_length=500, null=True, verbose_name='DNS Challenge Value')),
                ('dns_challenge_created_at', models.DateTimeField(blank=True, help_text='When the DNS challenge was generated', null=True, verbose_name='DNS Challenge Created At')),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Sites',
            },
        ),
        migrations.CreateModel(
            name='WafTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Template Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('template_type', models.CharField(choices=[('basic', 'Basic'), ('advanced', 'Advanced')], default='basic', max_length=20, verbose_name='Template Type')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'WAF Template',
                'verbose_name_plural': 'WAF Templates',
            },
        ),
        migrations.CreateModel(
            name='RequestAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('ip_address', models.GenericIPAddressField(db_index=True, verbose_name='IP Address')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Country')),
                ('country_code', models.CharField(blank=True, db_index=True, max_length=2, null=True, verbose_name='Country Code')),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Region')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('request_method', models.CharField(max_length=10, verbose_name='Request Method')),
                ('request_url', models.TextField(verbose_name='Request URL')),
                ('request_path', models.TextField(verbose_name='Request Path')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('referer', models.TextField(blank=True, null=True, verbose_name='Referer')),
                ('status_code', models.IntegerField(verbose_name='Status Code')),
                ('response_time', models.FloatField(help_text='Response time in milliseconds', verbose_name='Response Time (ms)')),
                ('action_taken', models.CharField(choices=[('allowed', 'Allowed'), ('blocked', 'Blocked'), ('rate_limited', 'Rate Limited')], db_index=True, default='allowed', max_length=20, verbose_name='Action Taken')),
                ('threat_level', models.CharField(choices=[('none', 'None'), ('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], db_index=True, default='none', max_length=10, verbose_name='Threat Level')),
                ('threat_type', models.CharField(blank=True, help_text='Type of threat detected (SQL Injection, XSS, etc.)', max_length=50, null=True, verbose_name='Threat Type')),
                ('is_blacklisted', models.BooleanField(db_index=True, default=False, verbose_name='Is Blacklisted')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Request Analytics',
                'verbose_name_plural': 'Request Analytics',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Logs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP Address')),
                ('request_method', models.CharField(max_length=10, verbose_name='Request Method')),
                ('request_url', models.URLField(verbose_name='Request URL')),
                ('action_taken', models.CharField(choices=[('blocked', 'Blocked'), ('logged', 'Logged')], max_length=20, verbose_name='Action Taken')),
                ('details', models.TextField(blank=True, null=True, verbose_name='Details')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Log',
                'verbose_name_plural': 'Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='LoadBalancers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('algorithm', models.CharField(choices=[('round_robin', 'Round Robin'), ('least_connections', 'Least Connections'), ('ip_hash', 'IP Hash')], default='round_robin', max_length=20, verbose_name='Algorithm')),
                ('health_check_url', models.URLField(verbose_name='Health Check URL')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='load_balancer', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Load Balancer',
                'verbose_name_plural': 'Load Balancers',
            },
        ),
        migrations.CreateModel(
            name='GeographicStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True, verbose_name='Date')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('country_code', models.CharField(db_index=True, max_length=2, verbose_name='Country Code')),
                ('total_requests', models.IntegerField(default=0, verbose_name='Total Requests')),
                ('blocked_requests', models.IntegerField(default=0, verbose_name='Blocked Requests')),
                ('allowed_requests', models.IntegerField(default=0, verbose_name='Allowed Requests')),
                ('unique_ips', models.IntegerField(default=0, verbose_name='Unique IPs')),
                ('avg_response_time', models.FloatField(default=0, verbose_name='Average Response Time (ms)')),
                ('high_threat_count', models.IntegerField(default=0, verbose_name='High Threat Count')),
                ('medium_threat_count', models.IntegerField(default=0, verbose_name='Medium Threat Count')),
                ('low_threat_count', models.IntegerField(default=0, verbose_name='Low Threat Count')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geographic_stats', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Geographic Statistics',
                'verbose_name_plural': 'Geographic Statistics',
                'ordering': ['-date', '-total_requests'],
            },
        ),
        migrations.CreateModel(
            name='EmailReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recipient_email', models.EmailField(max_length=254, verbose_name='Recipient Email')),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], default='weekly', max_length=20, verbose_name='Frequency')),
                ('include_geographic', models.BooleanField(default=True, verbose_name='Include Geographic Analytics')),
                ('include_threats', models.BooleanField(default=True, verbose_name='Include Threat Summary')),
                ('include_top_ips', models.BooleanField(default=True, verbose_name='Include Top IPs')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('last_sent', models.DateTimeField(blank=True, null=True, verbose_name='Last Sent')),
                ('next_send', models.DateTimeField(verbose_name='Next Send Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_reports', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Email Report',
                'verbose_name_plural': 'Email Reports',
                'ordering': ['next_send'],
            },
        ),
        migrations.CreateModel(
            name='BlockedIP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(db_index=True)),
                ('reason', models.CharField(db_index=True, default='manual', max_length=100)),
                ('blocked_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(db_index=True)),
                ('escalation_level', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True, null=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_ips', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Blocked IP',
                'verbose_name_plural': 'Blocked IPs',
            },
        ),
        migrations.CreateModel(
            name='Addresses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP Address')),
                ('port', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(65535)], verbose_name='Port')),
                ('is_allowed', models.BooleanField(default=True, help_text='True for allowlist, False for blocklist', verbose_name='Is Allowed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='ThreatAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('alert_type', models.CharField(choices=[('high_volume', 'High Volume Attack'), ('geographic_anomaly', 'Geographic Anomaly'), ('repeated_blocks', 'Repeated Blocks from IP'), ('new_threat', 'New Threat Pattern'), ('ddos', 'Possible DDoS')], max_length=50, verbose_name='Alert Type')),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10, verbose_name='Severity')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('country_code', models.CharField(blank=True, max_length=2, null=True, verbose_name='Country Code')),
                ('description', models.TextField(verbose_name='Description')),
                ('request_count', models.IntegerField(default=0, verbose_name='Related Request Count')),
                ('is_resolved', models.BooleanField(default=False, verbose_name='Is Resolved')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Resolved At')),
                ('is_notified', models.BooleanField(default=False, verbose_name='Email Sent')),
                ('analytics', models.ManyToManyField(blank=True, related_name='alerts', to='site_management.requestanalytics', verbose_name='Related Analytics')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='threat_alerts', to='site_management.site', verbose_name='Site')),
            ],
            options={
                'verbose_name': 'Threat Alert',
                'verbose_name_plural': 'Threat Alerts',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='site',
            name='WafTemplate',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sites', to='site_management.waftemplate', verbose_name='WAF Template'),
        ),
        migrations.AddIndex(
            model_name='requestanalytics',
            index=models.Index(fields=['site', 'timestamp'], name='site_manage_site_id_9b4868_idx'),
        ),
        migrations.AddIndex(
            model_name='requestanalytics',
            index=models.Index(fields=['site', 'country_code'], name='site_manage_site_id_a9217b_idx'),
        ),
        migrations.AddIndex(
            model_name='requestanalytics',
            index=models.Index(fields=['site', 'action_taken'], name='site_manage_site_id_3e6144_idx'),
        ),
        migrations.AddIndex(
            model_name='requestanalytics',
            index=models.Index(fields=['ip_address', 'timestamp'], name='site_manage_ip_addr_16b05b_idx'),
        ),
        migrations.AddIndex(
            model_name='geographicstats',
            index=models.Index(fields=['site', 'date'], name='site_manage_site_id_15f60e_idx'),
        ),
        migrations.AddIndex(
            model_name='geographicstats',
            index=models.Index(fields=['site', 'country_code', 'date'], name='site_manage_site_id_5aaf21_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='geographicstats',
            unique_together={('site', 'date', 'country_code')},
        ),
        migrations.AddIndex(
            model_name='blockedip',
            index=models.Index(fields=['site', 'ip_address'], name='site_manage_site_id_2694ad_idx'),
        ),
        migrations.AddIndex(
            model_name='blockedip',
            index=models.Index(fields=['site', 'expires_at'], name='site_manage_site_id_6583e4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='blockedip',
            unique_together={('site', 'ip_address')},
        ),
        migrations.AddIndex(
            model_name='addresses',
            index=models.Index(fields=['ip_address', 'port'], name='site_manage_ip_addr_464d32_idx'),
        ),
        migrations.AddIndex(
            model_name='threatalert',
            index=models.Index(fields=['site', 'timestamp'], name='site_manage_site_id_33448d_idx'),
        ),
        migrations.AddIndex(
            model_name='threatalert',
            index=models.Index(fields=['is_resolved', 'severity'], name='site_manage_is_reso_bfcebc_idx'),
        ),
        migrations.AddIndex(
            model_name='site',
            index=models.Index(fields=['host'], name='site_manage_host_7823d2_idx'),
        ),
        migrations.AddIndex(
            model_name='site',
            index=models.Index(fields=['slug'], name='site_manage_slug_ef344d_idx'),
        ),
    ]
